
stages:
  - build
  - test
  - staging
  - prod_test

.template:
  image: node:latest
  cache:
    paths:
    - node_modules/
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'


build_job:
  extends: .template
  stage: build
  script:
  - yarn -v
  - yarn install
  #- uname -a # coreos
  #- readlink /bin/sh # dash
  - chmod +x ./websites/main/build.sh
  - ./websites/main/build.sh
  - chmod +x ./websites/landing/build.sh
  - ./websites/landing/build.sh


build_docker:
  stage: build
  image: docker:stable
  only:
    - master
  services:
    - docker:dind
  before_script:
    - echo 
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker build -t registry.gitlab.com/igordata/bsm.2018.4/main:latest -f docker/Dockerfile .
    - docker push registry.gitlab.com/igordata/bsm.2018.4/main:latest


api_tests:
  stage: test
  image: python:alpine
  script:
    - cd ./python_tests
    - pip3 install -r requirements.txt
    - python3 -m pytest --host=https://besmarter.ru -m api


webui_tests:
  stage: test
  image: docker:stable
  services:
    - docker:dind
  before_script:
    - apk add --no-cache python3 py3-pip bash
    - pip3 install docker-compose
    - docker-compose -f docker/docker-compose.yml up -d
  script:
    - cd ./python_tests
    - pip3 install -r requirements.txt
    - python3 -m pytest --selenium-host=http://docker:4444/wd/hub
      --host=http://frontend:3000 -m webui
  after_script:
    - docker-compose -f docker/docker-compose.yml stop
  artifacts:
    when: always
    expire_in: 3 weeks
    paths:
      - allure/


stage_deploy:
  extends: .template
  only:
  - master
  stage: staging
  script:
  - ssh-add <(echo "$STAGING_PRIVATE_KEY")
  - ssh -p2017 rs@145.239.85.163 "/var/www/update.sh"

