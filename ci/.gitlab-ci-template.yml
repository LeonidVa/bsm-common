
stages:
  - build
  - test
  - docker
  - deploy

variables:
  TRIGGER_COMMIT_SHA: ""

.python_cache:
  cache:
    key: python-cache
    paths:
      - .cache/pip
      - venv/


.build:
  image: node:lts-alpine
  cache:
    key: node-cache
    paths:
    - node_modules/
  stage: build
  variables: 
    NODE_ENV: production
  before_script:
    - apk add --no-cache bash git openssh
    - git clone --depth 1 https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/besmarter/bsm-common.git ./tmp
    - if [ -n "$TRIGGER_COMMIT_SHA" ]; 
      then echo "Using custom commit SHA $TRIGGER_COMMIT_SHA"; 
      cd ./tmp && git fetch origin $TRIGGER_COMMIT_SHA && git checkout $TRIGGER_COMMIT_SHA && cd ../; 
      else echo "Using master branch"; fi
    - mv ./tmp/bsm-shared ./bsm-shared
    - rm -rf ./tmp
  script:
    - yarn -v
    - yarn install
    - yarn run build
  artifacts:
    paths:
      - ./bsm-shared


.test-webui:
  extends: .python_cache
  stage: test
  image: docker:stable
  services:
    - docker:dind
  before_script:
    - apk add --no-cache python3 py3-pip bash git
    - git diff master.. ./python_tests | grep python || git checkout origin/master -- ./python_tests
    - pip3 install docker-compose virtualenv
    - 'ls venv/bin/activate || python3 -m venv venv'
    - source venv/bin/activate
    - docker-compose -f docker/docker-compose.yml up -d
  script:
    - cd ./python_tests
    - pip3 install -r requirements.txt
    - python3 -m pytest --selenium-host=http://docker:4444/wd/hub
      --host=http://frontend:3000 --verify-host=http://docker:49501 -m webui
  after_script:
    - docker-compose -f docker/docker-compose.yml logs -t --no-color > logs.txt
    - docker-compose -f docker/docker-compose.yml stop
  dependencies:
    - build
  artifacts:
    when: always
    expire_in: 3 weeks
    paths:
      - python_tests/allure/
      - logs.txt


.docker:
  image: docker:stable
  stage: docker
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker build -t registry.gitlab.com/besmarter/$CI_PROJECT_NAME/$CI_PROJECT_NAME:build-$CI_PIPELINE_IID -f docker/Dockerfile .
    - docker push registry.gitlab.com/besmarter/$CI_PROJECT_NAME/$CI_PROJECT_NAME:build-$CI_PIPELINE_IID
  dependencies:
    - build

.docker-latest:
  image: docker:stable
  stage: deploy
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker pull registry.gitlab.com/besmarter/$CI_PROJECT_NAME/$CI_PROJECT_NAME:build-$CI_PIPELINE_IID
    - docker tag registry.gitlab.com/besmarter/$CI_PROJECT_NAME/$CI_PROJECT_NAME:build-$CI_PIPELINE_IID registry.gitlab.com/besmarter/$CI_PROJECT_NAME/$CI_PROJECT_NAME:latest
    - docker push registry.gitlab.com/besmarter/$CI_PROJECT_NAME/$CI_PROJECT_NAME:latest
  only:
    - master
  except:
    variables:
      - $TRIGGER_COMMIT_SHA

.deploy:
  image: node:lts-alpine
  stage: deploy
  before_script:
    - apk add --no-cache openssh
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - echo "$PROD_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - ssh -p$PROD_SSH_PORT $PROD_SSH_USER@$PROD_SSH_HOST "/var/www/update.sh $CI_PROJECT_NAME"
  only:
    - master
  except:
    variables:
      - $TRIGGER_COMMIT_SHA
